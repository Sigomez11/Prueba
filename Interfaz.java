package dptoPolicia;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author sigoc
 */
public class Interfaz extends javax.swing.JFrame {
    
    DptoPolicia dpto = new DptoPolicia();   //Instanciado la principal
    DptoPolicia dptoIn= null;  //Instanciando clase copia (Se utiliza con la clase ObjectInputStream)
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroup6 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        policiasBoton = new javax.swing.JButton();
        ciudadanosBoton = new javax.swing.JButton();
        homicidiosBoton = new javax.swing.JButton();
        abusoSexualBoton = new javax.swing.JButton();
        secuestroBoton = new javax.swing.JButton();
        robosBoton = new javax.swing.JButton();
        PolSospBoton = new javax.swing.JButton();
        multiplePane = new javax.swing.JTabbedPane();
        javax.swing.JPanel panelPolicias = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPolicia = new javax.swing.JTable();
        javax.swing.JLabel PlacaLabel1 = new javax.swing.JLabel();
        tfplacaPol = new javax.swing.JTextField();
        javax.swing.JLabel SedePolLabel = new javax.swing.JLabel();
        tfSedePol = new javax.swing.JTextField();
        javax.swing.JLabel CCPolLabel1 = new javax.swing.JLabel();
        tfCCPol = new javax.swing.JTextField();
        addPolBoton = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        generalR = new javax.swing.JRadioButton();
        coronelR = new javax.swing.JRadioButton();
        mayorR = new javax.swing.JRadioButton();
        tenienteR = new javax.swing.JRadioButton();
        capitanR = new javax.swing.JRadioButton();
        tenienteCoronelR = new javax.swing.JRadioButton();
        detectiveR = new javax.swing.JRadioButton();
        patrulleroR = new javax.swing.JRadioButton();
        eliminarPoliciaBoton = new javax.swing.JButton();
        panelCiudadanos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCiudadanos = new javax.swing.JTable();
        javax.swing.JLabel CedulaCiud = new javax.swing.JLabel();
        tfCCCiud = new javax.swing.JTextField();
        javax.swing.JLabel CedulaCiud1 = new javax.swing.JLabel();
        tfNombreCiud = new javax.swing.JTextField();
        javax.swing.JLabel CedulaCiud2 = new javax.swing.JLabel();
        tfDireccionCiud = new javax.swing.JTextField();
        javax.swing.JLabel CedulaCiud3 = new javax.swing.JLabel();
        tfFechaNaciCiud = new javax.swing.JTextField();
        javax.swing.JLabel CedulaCiud4 = new javax.swing.JLabel();
        tfCelularCiud = new javax.swing.JTextField();
        addCiudBoton = new javax.swing.JButton();
        eliminarCiudBoton = new javax.swing.JButton();
        panelHomicidios = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaHomicidio = new javax.swing.JTable();
        javax.swing.JLabel jLabel16 = new javax.swing.JLabel();
        tipoHomicidioTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel17 = new javax.swing.JLabel();
        ubicacionHomTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel18 = new javax.swing.JLabel();
        descripcionHomTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel19 = new javax.swing.JLabel();
        armaHomTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel20 = new javax.swing.JLabel();
        fechaHomTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel21 = new javax.swing.JLabel();
        prioridadHomAlto = new javax.swing.JRadioButton();
        prioridadHomMedio = new javax.swing.JRadioButton();
        prioridadHomBajo = new javax.swing.JRadioButton();
        javax.swing.JLabel jLabel22 = new javax.swing.JLabel();
        codCasoHomTxt = new javax.swing.JTextField();
        añadirHomBtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaVictimaHom = new javax.swing.JTable();
        javax.swing.JLabel jLabel23 = new javax.swing.JLabel();
        ccVictimaHomTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel24 = new javax.swing.JLabel();
        codCasoVictTxt = new javax.swing.JTextField();
        añadirVictimaHomBtn = new javax.swing.JButton();
        eliminarHomicidioBoton = new javax.swing.JButton();
        panelAbusoSexual = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaAbuso = new javax.swing.JTable();
        menorVerdadero = new javax.swing.JRadioButton();
        menorFalso = new javax.swing.JRadioButton();
        ccVictimaAbusoTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        ubicacionAbusoTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        descripcionAbusoTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        acosoAlto = new javax.swing.JRadioButton();
        acosoModerado = new javax.swing.JRadioButton();
        acosoLeve = new javax.swing.JRadioButton();
        javax.swing.JLabel jLabel6 = new javax.swing.JLabel();
        prioridadAlto = new javax.swing.JRadioButton();
        prioridadMedio = new javax.swing.JRadioButton();
        prioridadBajo = new javax.swing.JRadioButton();
        añadirCasoAbusoBtn = new javax.swing.JButton();
        javax.swing.JLabel jLabel7 = new javax.swing.JLabel();
        fechaAbusoTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel8 = new javax.swing.JLabel();
        codCasoAbusoTxt = new javax.swing.JTextField();
        eliminarAbuso = new javax.swing.JButton();
        panelSecuestros = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaSecuestro = new javax.swing.JTable();
        javax.swing.JLabel jLabel9 = new javax.swing.JLabel();
        ultVezVistoTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel10 = new javax.swing.JLabel();
        ccDesaparecidoTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel11 = new javax.swing.JLabel();
        descripDesaparecidoTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel12 = new javax.swing.JLabel();
        fotoTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel13 = new javax.swing.JLabel();
        fechaDesaparicionTxt = new javax.swing.JTextField();
        javax.swing.JLabel jLabel14 = new javax.swing.JLabel();
        prioridadSecAlto = new javax.swing.JRadioButton();
        prioridadSecMedio = new javax.swing.JRadioButton();
        prioridadSecBajo = new javax.swing.JRadioButton();
        javax.swing.JLabel jLabel15 = new javax.swing.JLabel();
        codCasoSecuestroTxt = new javax.swing.JTextField();
        addSecuestroBoton = new javax.swing.JButton();
        javax.swing.JLabel jLabel29 = new javax.swing.JLabel();
        ubicacionSecuestroTxt = new javax.swing.JTextField();
        eliminarSecuestro = new javax.swing.JButton();
        panelRobos = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        TablaRobos = new javax.swing.JTable();
        javax.swing.JLabel jLabel26 = new javax.swing.JLabel();
        tfCodCasoRobo = new javax.swing.JTextField();
        javax.swing.JLabel jLabel28 = new javax.swing.JLabel();
        tfUbicacionCasoRobo = new javax.swing.JTextField();
        javax.swing.JLabel jLabel30 = new javax.swing.JLabel();
        tfdescripCasoRobo = new javax.swing.JTextField();
        addBtnRobo = new javax.swing.JButton();
        javax.swing.JLabel jLabel31 = new javax.swing.JLabel();
        rbNivelPrior_Alto_Robo = new javax.swing.JRadioButton();
        rbNivelPrior_Medio_Robo = new javax.swing.JRadioButton();
        rbNivelPrior_Bajo_Robo = new javax.swing.JRadioButton();
        javax.swing.JLabel jLabel32 = new javax.swing.JLabel();
        tfTipoCasoRobo = new javax.swing.JTextField();
        javax.swing.JLabel jLabel33 = new javax.swing.JLabel();
        tfFechaRobo = new javax.swing.JTextField();
        jScrollPane11 = new javax.swing.JScrollPane();
        tablaVictimaRobo = new javax.swing.JTable();
        javax.swing.JLabel jLabel34 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel39 = new javax.swing.JLabel();
        tfCCAddVictimaRobo = new javax.swing.JTextField();
        javax.swing.JLabel jLabel40 = new javax.swing.JLabel();
        tfCodCasoAddVictimaRobo = new javax.swing.JTextField();
        AddVictimaRoboBoton = new javax.swing.JButton();
        eliminarRoboBoton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaSospechosos = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        tablaAsigPolicia = new javax.swing.JTable();
        javax.swing.JLabel jLabel35 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel36 = new javax.swing.JLabel();
        AsignarSospechosoBoton = new javax.swing.JButton();
        javax.swing.JLabel jLabel37 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel38 = new javax.swing.JLabel();
        tfAsigPolCodigoCaso = new javax.swing.JTextField();
        tfAsigPolCC = new javax.swing.JTextField();
        javax.swing.JLabel jLabel43 = new javax.swing.JLabel();
        tfAsigSospCodCaso = new javax.swing.JTextField();
        tfAsigSospCC = new javax.swing.JTextField();
        javax.swing.JLabel jLabel44 = new javax.swing.JLabel();
        AsignarPoliciaBoton1 = new javax.swing.JButton();
        javax.swing.JLabel jLabel45 = new javax.swing.JLabel();
        tfAsigSospDescripSospecha = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        tablaObjetosRobados = new javax.swing.JTable();
        javax.swing.JLabel jLabel27 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel41 = new javax.swing.JLabel();
        tfCodigoCasoObjetoRobado = new javax.swing.JTextField();
        javax.swing.JLabel jLabel42 = new javax.swing.JLabel();
        tfObjetoObjetoRobado = new javax.swing.JTextField();
        AddObjetoRobadoBoton = new javax.swing.JButton();
        EliminarObjetoRobadoBoton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 700));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(java.awt.Color.darkGray);
        jPanel1.setForeground(new java.awt.Color(102, 204, 255));

        policiasBoton.setText("Policias");
        policiasBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                policiasBotonActionPerformed(evt);
            }
        });

        ciudadanosBoton.setText("Ciudadanos");
        ciudadanosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciudadanosBotonActionPerformed(evt);
            }
        });

        homicidiosBoton.setText("Homicidios");
        homicidiosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homicidiosBotonActionPerformed(evt);
            }
        });

        abusoSexualBoton.setText("Abuso Sexual");
        abusoSexualBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abusoSexualBotonActionPerformed(evt);
            }
        });

        secuestroBoton.setText("Secuestro");
        secuestroBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secuestroBotonActionPerformed(evt);
            }
        });

        robosBoton.setText("Robos");
        robosBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                robosBotonActionPerformed(evt);
            }
        });

        PolSospBoton.setText("Pol/Sosp");
        PolSospBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PolSospBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(policiasBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ciudadanosBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(homicidiosBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(abusoSexualBoton, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(secuestroBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(robosBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PolSospBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(policiasBoton)
                .addGap(39, 39, 39)
                .addComponent(ciudadanosBoton)
                .addGap(43, 43, 43)
                .addComponent(homicidiosBoton)
                .addGap(44, 44, 44)
                .addComponent(abusoSexualBoton)
                .addGap(40, 40, 40)
                .addComponent(secuestroBoton)
                .addGap(41, 41, 41)
                .addComponent(robosBoton)
                .addGap(41, 41, 41)
                .addComponent(PolSospBoton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {abusoSexualBoton, ciudadanosBoton, homicidiosBoton, policiasBoton, robosBoton, secuestroBoton});

        panelPolicias.setBackground(new java.awt.Color(0, 51, 102));

        tablaPolicia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "CC", "Rango", "Placa", "Cel", "Sede"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPolicia);

        PlacaLabel1.setForeground(new java.awt.Color(255, 255, 255));
        PlacaLabel1.setText("Placa");

        SedePolLabel.setForeground(new java.awt.Color(255, 255, 255));
        SedePolLabel.setText("Sede");

        CCPolLabel1.setForeground(new java.awt.Color(255, 255, 255));
        CCPolLabel1.setText("CC");

        addPolBoton.setText("AÑADIR");
        addPolBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPolBotonActionPerformed(evt);
            }
        });

        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Rango:");

        buttonGroup6.add(generalR);
        generalR.setForeground(new java.awt.Color(255, 255, 255));
        generalR.setText("General");

        buttonGroup6.add(coronelR);
        coronelR.setForeground(new java.awt.Color(255, 255, 255));
        coronelR.setText("Coronel");

        buttonGroup6.add(mayorR);
        mayorR.setForeground(new java.awt.Color(255, 255, 255));
        mayorR.setText("Mayor");

        buttonGroup6.add(tenienteR);
        tenienteR.setForeground(new java.awt.Color(255, 255, 255));
        tenienteR.setText("Teniente");

        buttonGroup6.add(capitanR);
        capitanR.setForeground(new java.awt.Color(255, 255, 255));
        capitanR.setText("Capitan");

        buttonGroup6.add(tenienteCoronelR);
        tenienteCoronelR.setForeground(new java.awt.Color(255, 255, 255));
        tenienteCoronelR.setText("Teniente coronel");

        buttonGroup6.add(detectiveR);
        detectiveR.setForeground(new java.awt.Color(255, 255, 255));
        detectiveR.setText("Detective");

        buttonGroup6.add(patrulleroR);
        patrulleroR.setForeground(new java.awt.Color(255, 255, 255));
        patrulleroR.setText("Patrullero");

        eliminarPoliciaBoton.setText("ELIMINAR");
        eliminarPoliciaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPoliciaBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPoliciasLayout = new javax.swing.GroupLayout(panelPolicias);
        panelPolicias.setLayout(panelPoliciasLayout);
        panelPoliciasLayout.setHorizontalGroup(
            panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPoliciasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(panelPoliciasLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPoliciasLayout.createSequentialGroup()
                        .addComponent(capitanR, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tenienteCoronelR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(detectiveR, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(patrulleroR, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPoliciasLayout.createSequentialGroup()
                        .addComponent(generalR, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(coronelR, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mayorR, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tenienteR, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelPoliciasLayout.createSequentialGroup()
                        .addGroup(panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelPoliciasLayout.createSequentialGroup()
                                .addComponent(PlacaLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addComponent(tfplacaPol, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelPoliciasLayout.createSequentialGroup()
                                .addComponent(SedePolLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfSedePol, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelPoliciasLayout.createSequentialGroup()
                                .addComponent(CCPolLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfCCPol, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addGroup(panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(eliminarPoliciaBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addPolBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(298, Short.MAX_VALUE))
        );
        panelPoliciasLayout.setVerticalGroup(
            panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPoliciasLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CCPolLabel1)
                    .addComponent(tfCCPol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarPoliciaBoton))
                .addGap(18, 18, 18)
                .addGroup(panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlacaLabel1)
                    .addComponent(tfplacaPol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SedePolLabel)
                    .addComponent(tfSedePol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPolBoton))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generalR)
                    .addComponent(coronelR)
                    .addComponent(mayorR)
                    .addComponent(tenienteR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPoliciasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(capitanR)
                    .addComponent(tenienteCoronelR)
                    .addComponent(detectiveR)
                    .addComponent(patrulleroR))
                .addContainerGap(1624, Short.MAX_VALUE))
        );

        multiplePane.addTab("Policias", panelPolicias);

        panelCiudadanos.setBackground(new java.awt.Color(0, 51, 102));
        panelCiudadanos.setForeground(new java.awt.Color(255, 255, 255));

        tablaCiudadanos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CC", "Nombre", "Dirección", "Fecha Nacimiento", "Celular"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaCiudadanos);

        CedulaCiud.setForeground(new java.awt.Color(255, 255, 255));
        CedulaCiud.setText("CC");

        tfCCCiud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCCCiudActionPerformed(evt);
            }
        });

        CedulaCiud1.setForeground(new java.awt.Color(255, 255, 255));
        CedulaCiud1.setText("Nombre");

        tfNombreCiud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNombreCiudActionPerformed(evt);
            }
        });

        CedulaCiud2.setForeground(new java.awt.Color(255, 255, 255));
        CedulaCiud2.setText("Dirección");

        tfDireccionCiud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfDireccionCiudActionPerformed(evt);
            }
        });

        CedulaCiud3.setForeground(new java.awt.Color(255, 255, 255));
        CedulaCiud3.setText("Fecha Nacimiento");

        tfFechaNaciCiud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfFechaNaciCiudActionPerformed(evt);
            }
        });

        CedulaCiud4.setForeground(new java.awt.Color(255, 255, 255));
        CedulaCiud4.setText("Celular");

        tfCelularCiud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCelularCiudActionPerformed(evt);
            }
        });

        addCiudBoton.setText("AÑADIR");
        addCiudBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCiudBotonActionPerformed(evt);
            }
        });

        eliminarCiudBoton.setText("ELIMINAR");
        eliminarCiudBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarCiudBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCiudadanosLayout = new javax.swing.GroupLayout(panelCiudadanos);
        panelCiudadanos.setLayout(panelCiudadanosLayout);
        panelCiudadanosLayout.setHorizontalGroup(
            panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCiudadanosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(panelCiudadanosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(panelCiudadanosLayout.createSequentialGroup()
                        .addGroup(panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CedulaCiud)
                            .addComponent(CedulaCiud2)
                            .addComponent(CedulaCiud4))
                        .addGap(64, 64, 64)
                        .addGroup(panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfDireccionCiud, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCCCiud, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCelularCiud, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCiudBoton)))
                    .addGroup(panelCiudadanosLayout.createSequentialGroup()
                        .addComponent(CedulaCiud1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfNombreCiud, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelCiudadanosLayout.createSequentialGroup()
                        .addComponent(CedulaCiud3)
                        .addGap(18, 18, 18)
                        .addComponent(tfFechaNaciCiud, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(eliminarCiudBoton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCiudadanosLayout.setVerticalGroup(
            panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCiudadanosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CedulaCiud)
                    .addComponent(tfCCCiud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarCiudBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CedulaCiud1)
                    .addComponent(tfNombreCiud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CedulaCiud2)
                    .addComponent(tfDireccionCiud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CedulaCiud3)
                    .addComponent(tfFechaNaciCiud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCiudadanosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CedulaCiud4)
                    .addComponent(tfCelularCiud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addCiudBoton)
                .addContainerGap(1650, Short.MAX_VALUE))
        );

        multiplePane.addTab("Ciudadanos", panelCiudadanos);

        panelHomicidios.setBackground(new java.awt.Color(0, 52, 102));

        tablaHomicidio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo de homicidio", "Lugar donde ocurrio", "Descripcion escena", "Arma causante", "Fecha", "Nivel de prioridad", "Codigo del caso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tablaHomicidio);

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Tipo de homicidio:");

        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Ubicacion:");

        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Descripcion:");

        descripcionHomTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionHomTxtActionPerformed(evt);
            }
        });

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Arma causante:");

        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Fecha homicidio:");

        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Nivel de prioridad del caso:");

        buttonGroup5.add(prioridadHomAlto);
        prioridadHomAlto.setForeground(new java.awt.Color(255, 255, 255));
        prioridadHomAlto.setText("Alto");

        buttonGroup5.add(prioridadHomMedio);
        prioridadHomMedio.setForeground(new java.awt.Color(255, 255, 255));
        prioridadHomMedio.setText("Medio");

        buttonGroup5.add(prioridadHomBajo);
        prioridadHomBajo.setForeground(new java.awt.Color(255, 255, 255));
        prioridadHomBajo.setText("Bajo");

        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Codigo del caso:");

        añadirHomBtn.setText("AÑADIR");
        añadirHomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirHomBtnActionPerformed(evt);
            }
        });

        tablaVictimaHom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre victima", "CC victima", "Codigo caso "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tablaVictimaHom);

        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("CC victima homicidio:");

        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Codigo caso al que pertenece la victima:");

        añadirVictimaHomBtn.setText("AÑADIR VICTIMA");
        añadirVictimaHomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirVictimaHomBtnActionPerformed(evt);
            }
        });

        eliminarHomicidioBoton.setText("ELIMINAR");
        eliminarHomicidioBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarHomicidioBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHomicidiosLayout = new javax.swing.GroupLayout(panelHomicidios);
        panelHomicidios.setLayout(panelHomicidiosLayout);
        panelHomicidiosLayout.setHorizontalGroup(
            panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomicidiosLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addGroup(panelHomicidiosLayout.createSequentialGroup()
                        .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelHomicidiosLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(49, 49, 49)
                                .addComponent(ubicacionHomTxt))
                            .addGroup(panelHomicidiosLayout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tipoHomicidioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codCasoHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(eliminarHomicidioBoton))
                    .addGroup(panelHomicidiosLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(40, 40, 40)
                        .addComponent(descripcionHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelHomicidiosLayout.createSequentialGroup()
                        .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelHomicidiosLayout.createSequentialGroup()
                                    .addComponent(prioridadHomAlto, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(prioridadHomMedio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(prioridadHomBajo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(panelHomicidiosLayout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(fechaHomTxt))
                                .addGroup(panelHomicidiosLayout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addGap(23, 23, 23)
                                    .addComponent(armaHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(34, 34, 34)
                        .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(añadirHomBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelHomicidiosLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ccVictimaHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel24)
                            .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(añadirVictimaHomBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                .addComponent(codCasoVictTxt, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHomicidiosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        panelHomicidiosLayout.setVerticalGroup(
            panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHomicidiosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(tipoHomicidioTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(codCasoHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarHomicidioBoton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(ubicacionHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(descripcionHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(armaHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(fechaHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(añadirHomBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prioridadHomAlto)
                    .addComponent(prioridadHomMedio)
                    .addComponent(prioridadHomBajo))
                .addGap(31, 31, 31)
                .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelHomicidiosLayout.createSequentialGroup()
                        .addGroup(panelHomicidiosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(ccVictimaHomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codCasoVictTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(añadirVictimaHomBtn))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1569, Short.MAX_VALUE))
        );

        multiplePane.addTab("Homicidio", panelHomicidios);

        panelAbusoSexual.setBackground(new java.awt.Color(0, 51, 102));

        tablaAbuso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "CC victima", "Nombre victima", "Prioridad", "Ubicacion", "Descripcion", "¿Menor?", "Nivel Acoso", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaAbuso);

        buttonGroup1.add(menorVerdadero);
        menorVerdadero.setForeground(new java.awt.Color(255, 255, 255));
        menorVerdadero.setText("Verdadero");
        menorVerdadero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menorVerdaderoActionPerformed(evt);
            }
        });

        buttonGroup1.add(menorFalso);
        menorFalso.setForeground(new java.awt.Color(255, 255, 255));
        menorFalso.setText("Falso");

        ccVictimaAbusoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccVictimaAbusoTxtActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CC Victima:");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ubicacion del suceso:");

        ubicacionAbusoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubicacionAbusoTxtActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Corta descripcion del suceso:");

        descripcionAbusoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descripcionAbusoTxtActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("¿Es la victima menor de edad?");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("¿Cual fue el nivel de acoso?");

        buttonGroup2.add(acosoAlto);
        acosoAlto.setForeground(new java.awt.Color(255, 255, 255));
        acosoAlto.setText("Alto");

        buttonGroup2.add(acosoModerado);
        acosoModerado.setForeground(new java.awt.Color(255, 255, 255));
        acosoModerado.setText("Moderado");

        buttonGroup2.add(acosoLeve);
        acosoLeve.setForeground(new java.awt.Color(255, 255, 255));
        acosoLeve.setText("Leve");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Nivel de prioridad del caso:");

        buttonGroup3.add(prioridadAlto);
        prioridadAlto.setForeground(new java.awt.Color(255, 255, 255));
        prioridadAlto.setText("Alto");

        buttonGroup3.add(prioridadMedio);
        prioridadMedio.setForeground(new java.awt.Color(255, 255, 255));
        prioridadMedio.setText("Medio");

        buttonGroup3.add(prioridadBajo);
        prioridadBajo.setForeground(new java.awt.Color(255, 255, 255));
        prioridadBajo.setText("Bajo");

        añadirCasoAbusoBtn.setText("AÑADIR");
        añadirCasoAbusoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirCasoAbusoBtnActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Fecha del suceso:");

        fechaAbusoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaAbusoTxtActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Codigo del caso:");

        codCasoAbusoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codCasoAbusoTxtActionPerformed(evt);
            }
        });

        eliminarAbuso.setText("ELIMINAR");
        eliminarAbuso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarAbusoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAbusoSexualLayout = new javax.swing.GroupLayout(panelAbusoSexual);
        panelAbusoSexual.setLayout(panelAbusoSexualLayout);
        panelAbusoSexualLayout.setHorizontalGroup(
            panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                        .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(descripcionAbusoTxt))
                            .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                                .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(46, 46, 46)
                                .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ccVictimaAbusoTxt)
                                    .addComponent(ubicacionAbusoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                            .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechaAbusoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(codCasoAbusoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                        .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(menorVerdadero, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menorFalso, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                                .addComponent(acosoAlto, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(acosoLeve, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(acosoModerado, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                                .addComponent(prioridadAlto, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(prioridadMedio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(prioridadBajo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(añadirCasoAbusoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(eliminarAbuso, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAbusoSexualLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        panelAbusoSexualLayout.setVerticalGroup(
            panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAbusoSexualLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(fechaAbusoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ccVictimaAbusoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(codCasoAbusoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addComponent(ubicacionAbusoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(descripcionAbusoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menorVerdadero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menorFalso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acosoAlto)
                    .addComponent(acosoLeve))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(acosoModerado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAbusoSexualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prioridadAlto)
                    .addComponent(prioridadMedio)
                    .addComponent(prioridadBajo)
                    .addComponent(añadirCasoAbusoBtn)
                    .addComponent(eliminarAbuso))
                .addContainerGap(1574, Short.MAX_VALUE))
        );

        multiplePane.addTab("Abuso sexual", panelAbusoSexual);

        panelSecuestros.setBackground(new java.awt.Color(0, 51, 102));

        tablaSecuestro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "CC", "UVV", "Descripcion", "Fecha D", "N Prior", "L.Foto", "CodCaso"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tablaSecuestro);

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CC del desaparecido:");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Ultima vez visto:");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Descripcion del desaparecido:");

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Link foto del desaparecido: ");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Fecha de desaparicion:");

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Indique el nivel de prioridad:");

        buttonGroup4.add(prioridadSecAlto);
        prioridadSecAlto.setForeground(new java.awt.Color(255, 255, 255));
        prioridadSecAlto.setText("Alto");

        buttonGroup4.add(prioridadSecMedio);
        prioridadSecMedio.setForeground(new java.awt.Color(255, 255, 255));
        prioridadSecMedio.setText("Medio");

        buttonGroup4.add(prioridadSecBajo);
        prioridadSecBajo.setForeground(new java.awt.Color(255, 255, 255));
        prioridadSecBajo.setText("Bajo");

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Codigo del caso:");

        addSecuestroBoton.setText("AÑADIR");
        addSecuestroBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSecuestroBotonActionPerformed(evt);
            }
        });

        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Ubicacion:");

        eliminarSecuestro.setText("ELIMINAR");
        eliminarSecuestro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarSecuestroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSecuestrosLayout = new javax.swing.GroupLayout(panelSecuestros);
        panelSecuestros.setLayout(panelSecuestrosLayout);
        panelSecuestrosLayout.setHorizontalGroup(
            panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSecuestrosLayout.createSequentialGroup()
                .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelSecuestrosLayout.createSequentialGroup()
                                .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(codCasoSecuestroTxt))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSecuestrosLayout.createSequentialGroup()
                                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel9))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ultVezVistoTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                            .addComponent(ccDesaparecidoTxt)))
                                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(fechaDesaparicionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(fotoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(ubicacionSecuestroTxt)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                                .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14)
                                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(panelSecuestrosLayout.createSequentialGroup()
                                                .addComponent(prioridadSecAlto, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(prioridadSecMedio, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(addSecuestroBoton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(eliminarSecuestro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(prioridadSecBajo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(panelSecuestrosLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(descripDesaparecidoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSecuestrosLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );
        panelSecuestrosLayout.setVerticalGroup(
            panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSecuestrosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(ccDesaparecidoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(ultVezVistoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(prioridadSecAlto)
                            .addComponent(prioridadSecMedio)
                            .addComponent(prioridadSecBajo))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(descripDesaparecidoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(fotoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(fechaDesaparicionTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSecuestroBoton))
                .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(codCasoSecuestroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelSecuestrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(ubicacionSecuestroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelSecuestrosLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(eliminarSecuestro)))
                .addContainerGap(1634, Short.MAX_VALUE))
        );

        multiplePane.addTab("Secuestro", panelSecuestros);

        panelRobos.setBackground(new java.awt.Color(0, 51, 102));

        TablaRobos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Ubicacion", "Tipo_Robo", "Descripcion", "Fecha", "NivelPrioridad", "Resuelto?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane8.setViewportView(TablaRobos);

        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Codigo del Caso:");

        tfCodCasoRobo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCodCasoRoboActionPerformed(evt);
            }
        });

        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Ubicacion:");

        tfUbicacionCasoRobo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfUbicacionCasoRoboActionPerformed(evt);
            }
        });

        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Descripcion:");

        tfdescripCasoRobo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfdescripCasoRoboActionPerformed(evt);
            }
        });

        addBtnRobo.setText("AÑADIR");
        addBtnRobo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnRoboActionPerformed(evt);
            }
        });

        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setText("Indique el nivel de Prioridad");

        rbNivelPrior_Alto_Robo.setForeground(new java.awt.Color(255, 255, 255));
        rbNivelPrior_Alto_Robo.setText("Alto");
        rbNivelPrior_Alto_Robo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNivelPrior_Alto_RoboActionPerformed(evt);
            }
        });

        rbNivelPrior_Medio_Robo.setForeground(new java.awt.Color(255, 255, 255));
        rbNivelPrior_Medio_Robo.setText("Medio");
        rbNivelPrior_Medio_Robo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNivelPrior_Medio_RoboActionPerformed(evt);
            }
        });

        rbNivelPrior_Bajo_Robo.setForeground(new java.awt.Color(255, 255, 255));
        rbNivelPrior_Bajo_Robo.setText("Bajo");
        rbNivelPrior_Bajo_Robo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNivelPrior_Bajo_RoboActionPerformed(evt);
            }
        });

        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setText("Tipo:");

        tfTipoCasoRobo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTipoCasoRoboActionPerformed(evt);
            }
        });

        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setText("Fecha:");

        tablaVictimaRobo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CC", "Nombre", "Codigo Caso"
            }
        ));
        jScrollPane11.setViewportView(tablaVictimaRobo);

        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Victimas de Robo");

        jLabel39.setForeground(new java.awt.Color(255, 255, 255));
        jLabel39.setText("CC Victima:");

        jLabel40.setForeground(new java.awt.Color(255, 255, 255));
        jLabel40.setText("Codigo del Caso:");

        AddVictimaRoboBoton.setText("AÑADIR VICTIMA");
        AddVictimaRoboBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddVictimaRoboBotonActionPerformed(evt);
            }
        });

        eliminarRoboBoton.setText("ELIMINAR");
        eliminarRoboBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarRoboBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRobosLayout = new javax.swing.GroupLayout(panelRobos);
        panelRobos.setLayout(panelRobosLayout);
        panelRobosLayout.setHorizontalGroup(
            panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRobosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelRobosLayout.createSequentialGroup()
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelRobosLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(panelRobosLayout.createSequentialGroup()
                                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfFechaRobo))
                                    .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(panelRobosLayout.createSequentialGroup()
                                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tfCodCasoRobo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelRobosLayout.createSequentialGroup()
                                            .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tfdescripCasoRobo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(panelRobosLayout.createSequentialGroup()
                                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tfTipoCasoRobo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRobosLayout.createSequentialGroup()
                                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(tfUbicacionCasoRobo, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(panelRobosLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(eliminarRoboBoton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addBtnRobo)))
                        .addGap(49, 49, 49)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelRobosLayout.createSequentialGroup()
                                .addComponent(rbNivelPrior_Alto_Robo)
                                .addGap(41, 41, 41)
                                .addComponent(rbNivelPrior_Medio_Robo)
                                .addGap(45, 45, 45)
                                .addComponent(rbNivelPrior_Bajo_Robo))
                            .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel34)
                            .addGroup(panelRobosLayout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(AddVictimaRoboBoton))
                            .addGroup(panelRobosLayout.createSequentialGroup()
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfCCAddVictimaRobo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelRobosLayout.createSequentialGroup()
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfCodCasoAddVictimaRobo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(83, 83, 83))
                    .addGroup(panelRobosLayout.createSequentialGroup()
                        .addComponent(jScrollPane8)
                        .addContainerGap())))
        );
        panelRobosLayout.setVerticalGroup(
            panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRobosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRobosLayout.createSequentialGroup()
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(tfCodCasoRobo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfUbicacionCasoRobo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(tfdescripCasoRobo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addComponent(tfTipoCasoRobo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(tfFechaRobo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addBtnRobo)
                            .addComponent(eliminarRoboBoton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelRobosLayout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbNivelPrior_Alto_Robo)
                            .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rbNivelPrior_Medio_Robo)
                                .addComponent(rbNivelPrior_Bajo_Robo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel34)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(tfCCAddVictimaRobo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelRobosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(tfCodCasoAddVictimaRobo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddVictimaRoboBoton)))
                .addContainerGap(1634, Short.MAX_VALUE))
        );

        multiplePane.addTab("Robos", panelRobos);

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));

        tablaSospechosos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodCaso", "CC", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tablaSospechosos);

        tablaAsigPolicia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodCaso", "CC Policia", "Nombre Policia", "Rango"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(tablaAsigPolicia);

        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("ASIGNACION SOSPECHOSOS");

        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("ASIGNACIÓN DE POLICIAS");

        AsignarSospechosoBoton.setText("ASIGNAR SOSPECHOSO");
        AsignarSospechosoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AsignarSospechosoBotonActionPerformed(evt);
            }
        });

        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setText("Codigo del Caso:");

        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setText("CC Policia:");

        jLabel43.setForeground(new java.awt.Color(255, 255, 255));
        jLabel43.setText("Código del Caso:");

        jLabel44.setForeground(new java.awt.Color(255, 255, 255));
        jLabel44.setText("CC Sospechoso:");

        AsignarPoliciaBoton1.setText("ASIGNAR POLICIA");
        AsignarPoliciaBoton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AsignarPoliciaBoton1ActionPerformed(evt);
            }
        });

        jLabel45.setForeground(new java.awt.Color(255, 255, 255));
        jLabel45.setText("Descripción Sospecha:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35)
                            .addComponent(AsignarPoliciaBoton1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel38)
                                    .addComponent(jLabel37))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfAsigPolCodigoCaso, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfAsigPolCC, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AsignarSospechosoBoton)
                                    .addComponent(jLabel36)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel43)
                        .addGap(18, 18, 18)
                        .addComponent(tfAsigSospCodCaso, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel44)
                        .addGap(18, 18, 18)
                        .addComponent(tfAsigSospCC, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel45))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAsigSospDescripSospecha, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel35)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAsigSospCodCaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel43))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAsigSospCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfAsigSospDescripSospecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(AsignarSospechosoBoton)))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAsigPolCodigoCaso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel37))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfAsigPolCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel38))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AsignarPoliciaBoton1))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1776, Short.MAX_VALUE))
        );

        multiplePane.addTab("Pol/Sosp", jPanel2);

        jPanel3.setBackground(new java.awt.Color(0, 51, 102));

        tablaObjetosRobados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CodCaso", "Objeto Robado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane12.setViewportView(tablaObjetosRobados);

        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Añadir/Eliminar Objeto Robado a un Caso");

        jLabel41.setForeground(new java.awt.Color(255, 255, 255));
        jLabel41.setText("Codigo del Caso:");

        jLabel42.setForeground(new java.awt.Color(255, 255, 255));
        jLabel42.setText("Objeto Robado");

        AddObjetoRobadoBoton.setText("AÑADIR");
        AddObjetoRobadoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddObjetoRobadoBotonActionPerformed(evt);
            }
        });

        EliminarObjetoRobadoBoton1.setText("ELIMINAR");
        EliminarObjetoRobadoBoton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarObjetoRobadoBoton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel41)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfCodigoCasoObjetoRobado, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel42)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(AddObjetoRobadoBoton)
                                        .addGap(18, 18, 18)
                                        .addComponent(EliminarObjetoRobadoBoton1))
                                    .addComponent(tfObjetoObjetoRobado, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel27))
                .addContainerGap(137, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel41)
                            .addComponent(tfCodigoCasoObjetoRobado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(tfObjetoObjetoRobado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddObjetoRobadoBoton)
                            .addComponent(EliminarObjetoRobadoBoton1)))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1833, Short.MAX_VALUE))
        );

        multiplePane.addTab("ObjetosRobados", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(multiplePane)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(multiplePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1062, 733));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ciudadanosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciudadanosBotonActionPerformed
        multiplePane.setSelectedIndex(1);
    }//GEN-LAST:event_ciudadanosBotonActionPerformed

    private void policiasBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_policiasBotonActionPerformed
        // TODO add your handling code here:
        multiplePane.setSelectedIndex(0);

    }//GEN-LAST:event_policiasBotonActionPerformed

    private void homicidiosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homicidiosBotonActionPerformed
        // TODO add your handling code here:
         multiplePane.setSelectedIndex(2);

    }//GEN-LAST:event_homicidiosBotonActionPerformed

    private void abusoSexualBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abusoSexualBotonActionPerformed
        // TODO add your handling code here:
          multiplePane.setSelectedIndex(3);

    }//GEN-LAST:event_abusoSexualBotonActionPerformed

    private void secuestroBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secuestroBotonActionPerformed
        // TODO add your handling code here:
          multiplePane.setSelectedIndex(4);

    }//GEN-LAST:event_secuestroBotonActionPerformed

    private void robosBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_robosBotonActionPerformed
        // TODO add your handling code here:
          multiplePane.setSelectedIndex(5);

    }//GEN-LAST:event_robosBotonActionPerformed

    private void addPolBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPolBotonActionPerformed
        // TODO add your handling code here:
        String cedula = tfCCPol.getText();
        Rango rango = null;
        String sede = tfSedePol.getText();
        String placa = tfplacaPol.getText();
        String nombre="";
        String direccion="";
        Date fechaNacimiento=null;
        String celular="";
        
        //Verificaciones
        boolean rangoSeleccionado = false;
        boolean camposCompleto = true;
        boolean ciudadanoEncontrado = true;
        
        //Verificar seleccion de datos
        if(coronelR.isSelected()){
            rango= Rango.valueOf("CORONEL");
            rangoSeleccionado = true;
        }
        if(generalR.isSelected()){
            rango= Rango.valueOf("GENERAL");
            rangoSeleccionado = true;
        }
        if(mayorR.isSelected()){
            rango= Rango.valueOf("MAYOR");
            rangoSeleccionado = true;
        }
        if(tenienteR.isSelected()){
            rango= Rango.valueOf("TENIENTE");
            rangoSeleccionado = true;
        }
        if(capitanR.isSelected()){
            rango= Rango.valueOf("CAPITAN");
            rangoSeleccionado = true;
        }
        if(tenienteCoronelR.isSelected()){
            rango= Rango.valueOf("TENIENTE_CORONEL");
            rangoSeleccionado=true;
        }
        if(detectiveR.isSelected()){
            rango= Rango.valueOf("DETECTIVE");
            rangoSeleccionado = true;
        }
        if(patrulleroR.isSelected()){
            rango= Rango.valueOf("PATRULLERO");
            rangoSeleccionado=true;
        }
        
        //Buscamos los datos del ciudadano
        try{
            int i = dpto.buscarCiudadano(cedula);
            if(i!=-1){
                nombre = dpto.getCiudadanos()[i].getNombre();
                direccion = dpto.getCiudadanos()[i].getDireccion();
                fechaNacimiento = dpto.getCiudadanos()[i].getFechaNacimiento();
                celular = dpto.getCiudadanos()[i].getCelular();
            }else{
                ciudadanoEncontrado = false;
                throw new ECiudadanoNoHallado();
            }
        }catch (ECiudadanoNoHallado e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        //Revisar si están los campos llenos, sii lo están, crear el objeto si cumple con las verificaciones
        for(String campo2 : new String[]{cedula, sede, placa}){
            if(campo2.isEmpty()){
                camposCompleto = false;
            }
        }      
        //Crear y agregar si cumple con las condiciones
        if(rangoSeleccionado && camposCompleto && ciudadanoEncontrado){
            
            DefaultTableModel model = (DefaultTableModel) tablaPolicia.getModel();
            model.addRow(new Object[]{nombre, cedula, rango, placa, celular, sede});//Añadir fila a la tabla en la interfaz
            dpto.addPolicia(nombre, cedula, direccion, fechaNacimiento, celular, rango, placa, sede);//Constructor        
            //Vaciar los campos
            tfCCCiud.setText("");
            tfNombreCiud.setText("");
            tfCelularCiud.setText("");
            tfDireccionCiud.setText("");
            tfFechaNaciCiud.setText("");
            buttonGroup6.clearSelection();
        }else{
            if(camposCompleto == false){
                JOptionPane.showMessageDialog(this, "Los campos no están completos", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else if(ciudadanoEncontrado==false){
                JOptionPane.showMessageDialog(this, "El Ciudadano no ha sido encontrado", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "No se ha seleccionado el Rango", "ERROR", JOptionPane.ERROR_MESSAGE);

            }
        }

    }//GEN-LAST:event_addPolBotonActionPerformed

    private void tfCCCiudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCCCiudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCCCiudActionPerformed

    private void tfNombreCiudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNombreCiudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNombreCiudActionPerformed

    private void tfDireccionCiudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfDireccionCiudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfDireccionCiudActionPerformed

    private void tfFechaNaciCiudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfFechaNaciCiudActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_tfFechaNaciCiudActionPerformed

    private void tfCelularCiudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCelularCiudActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCelularCiudActionPerformed

    private void addCiudBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCiudBotonActionPerformed
        // TODO add your handling code here:
        String nombre= tfNombreCiud.getText();
        String id= tfCCCiud.getText();
        String direccion= tfDireccionCiud.getText();
        Date fechaNacimiento = null; //Inicializamos como null
        String celular = tfCelularCiud.getText();
        
        //Variables que permitirán ejecutar o no
        boolean fechaValida = true;    
        boolean camposCompletos = true;
        boolean ccRepetida = false;
        
        //Cedula No repetida
        if(dpto.buscarCiudadano(id)!=-1){ccRepetida = true;} //Si está repetida, No se debe crear
        
        //Fecha
        SimpleDateFormat datef = new SimpleDateFormat("dd-MM-yyyy");
        try{
            String fechaString = tfFechaNaciCiud.getText(); //Obtenemos la fecha del campo ingresado
            fechaNacimiento = datef.parse(fechaString); //Convertimos la fecha
            
        }catch(ParseException e){
            fechaValida = false;
            JOptionPane.showMessageDialog(this, "Mal formato de fecha", "ERROR", JOptionPane.ERROR_MESSAGE);                    
        }
        
        //Comprobar que todos los campos esten llenos
    for (String campo : new String[]{nombre, id, direccion, celular}) {
        if (campo.isEmpty()) {
            camposCompletos = false;
        }
    }
       
       if(camposCompletos && fechaValida && ccRepetida == false){
            DefaultTableModel model = (DefaultTableModel) tablaCiudadanos.getModel();
            model.addRow(new Object[]{id,nombre, direccion, fechaNacimiento, celular});
            
            //COnstructor
            dpto.addCiudadano(nombre, id, direccion, fechaNacimiento, celular);
            
            //Volver a vaciar los campos
            tfCCCiud.setText("");
            tfNombreCiud.setText("");
            tfCelularCiud.setText("");
            tfDireccionCiud.setText("");
            tfFechaNaciCiud.setText("");
        }else{
           if(camposCompletos ==false){
               JOptionPane.showMessageDialog(this, "No se ingresaron todos los campos", "ERROR", JOptionPane.ERROR_MESSAGE);
           }else if(ccRepetida){
               JOptionPane.showMessageDialog(this, "La identificación que intentas ingresar ya existe", "ERROR", JOptionPane.ERROR_MESSAGE);

           }else{
               JOptionPane.showMessageDialog(this, "Formato de fecha: dd-mm-yyyy", "ERROR", JOptionPane.ERROR_MESSAGE);

           }
       }
        

    }//GEN-LAST:event_addCiudBotonActionPerformed

    private void menorVerdaderoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menorVerdaderoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menorVerdaderoActionPerformed

    private void ccVictimaAbusoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccVictimaAbusoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ccVictimaAbusoTxtActionPerformed

    private void ubicacionAbusoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubicacionAbusoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ubicacionAbusoTxtActionPerformed

    private void descripcionAbusoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionAbusoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descripcionAbusoTxtActionPerformed

    private void añadirCasoAbusoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirCasoAbusoBtnActionPerformed
        String codCaso= codCasoAbusoTxt.getText();
        String cc= ccVictimaAbusoTxt.getText();
        String ubicacion= ubicacionAbusoTxt.getText();
        String descripcion= descripcionAbusoTxt.getText();
        boolean isMenor=false;
        nivelAcoso nivelDeAcoso=null;
        nivelPrioridad nivelDePrioridad=null;
        Date fechaSuceso=null;
        String nombre="";
        
        //Verificaciones
        boolean menorSelec = false;
        boolean acosoSelec = false;
        boolean npSelec = false;
        boolean camposSelec = true;
        boolean abusoAdd = true;
        boolean fechaSeleccionada = true;
              
        //Verifica seleccion de datos
        if(menorVerdadero.isSelected()){
            isMenor=true;
            menorSelec = true;
        }
        if(menorFalso.isSelected()){
            isMenor=false;
            menorSelec=true;
        }
        if(acosoAlto.isSelected()){
            nivelDeAcoso= nivelAcoso.valueOf("ALTO");
            acosoSelec = true;
        }
        if(acosoModerado.isSelected()){
            nivelDeAcoso= nivelAcoso.valueOf("MODERADO");
            acosoSelec = true;
        }
        if(acosoLeve.isSelected()){
            nivelDeAcoso= nivelAcoso.valueOf("LEVE");
            acosoSelec = true;
        }
        if(prioridadAlto.isSelected()){
            nivelDePrioridad= nivelPrioridad.valueOf("ALTO");
            npSelec = true;
        }
        if(prioridadMedio.isSelected()){
            nivelDePrioridad= nivelPrioridad.valueOf("MEDIO");
            npSelec = true;
        }
        if(prioridadBajo.isSelected()){
            nivelDePrioridad= nivelPrioridad.valueOf("BAJO");
            npSelec = true;
        }
        
        //Fecha
        SimpleDateFormat datef = new SimpleDateFormat("dd-MM-yyyy");
        try{
            String fechaString = fechaAbusoTxt.getText(); //Obtenemos la fecha del campo ingresado
            fechaSuceso = datef.parse(fechaString); //Convertimos la fecha
        }catch(ParseException e){
            JOptionPane.showMessageDialog(this, "Mal formato de fecha", "ERROR", JOptionPane.ERROR_MESSAGE);
            fechaSeleccionada = false;
        }
        
        //Verificar que todos los campos estén llenos
        for(String campos : new String[]{cc, ubicacion, descripcion, codCaso}){
            if(campos.isEmpty()){
                camposSelec = false;
            }
    }
        //Crear objeto, revisar si es posible

        try {
            //COnstructor
              dpto.addAbusoSexual(codCaso, ubicacion, cc, descripcion, isMenor, nivelDeAcoso, fechaSuceso, nivelDePrioridad, dpto);
            } catch (ECiudadanoNoHallado ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                abusoAdd = false;
            }
        //Crear si cumple las condiciones
        if(menorSelec && npSelec && acosoSelec && camposSelec && abusoAdd && fechaSeleccionada){
            DefaultTableModel model = (DefaultTableModel) tablaAbuso.getModel();
        //Buscar nombre del ciudadano
        int i = dpto.buscarCiudadano(cc);
              if(i!=-1){
               nombre = dpto.getCiudadanos()[i].getNombre();
           }
            model.addRow(new Object[]{codCaso, cc, nombre, nivelDePrioridad, ubicacion, descripcion, isMenor, nivelDeAcoso, fechaSuceso});
            
            //Volver a vaciar los campos
            ccVictimaAbusoTxt.setText("");
            ubicacionAbusoTxt.setText("");
            descripcionAbusoTxt.setText("");
            fechaAbusoTxt.setText("");
            codCasoAbusoTxt.setText("");
            buttonGroup1.clearSelection();
            buttonGroup2.clearSelection();
            buttonGroup3.clearSelection();
    
        }else{
            if(camposSelec == false){
                JOptionPane.showMessageDialog(this, "Los campos no están completos", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else if(abusoAdd == false){
                JOptionPane.showMessageDialog(this, "No se añadió el caso", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else if(npSelec == false || acosoSelec == false || menorSelec == false){
                JOptionPane.showMessageDialog(this, "No ha seleccionado un boton", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            }
        
    }//GEN-LAST:event_añadirCasoAbusoBtnActionPerformed

    private void fechaAbusoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaAbusoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechaAbusoTxtActionPerformed

    private void codCasoAbusoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codCasoAbusoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codCasoAbusoTxtActionPerformed

    private void addSecuestroBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSecuestroBotonActionPerformed
        // TODO add your handling code here:
        String cc= ccDesaparecidoTxt.getText();
        String ultimaVezVisto= ultVezVistoTxt.getText();
        String descripcion= descripDesaparecidoTxt.getText();
        String linkFoto= fotoTxt.getText();
        Date fechaDesaparicion=null;
        nivelPrioridad nivelDePrioridad= null;
        String codigoCaso= codCasoSecuestroTxt.getText();
        String nombre="";
        String ubicacion = ubicacionSecuestroTxt.getText();
        
        //Verificaciones
        boolean npSeleccionado = false;
        boolean fechaSeleccionada = true;
        boolean camposSeleccionados = true;
        boolean secuestroAdd = true;
        
        //Verificar seleccion de datos
        if(prioridadSecAlto.isSelected()==true){
            nivelDePrioridad= nivelPrioridad.valueOf("ALTO");
            npSeleccionado = true;
        }
        if(prioridadSecMedio.isSelected()==true){
            nivelDePrioridad= nivelPrioridad.valueOf("MEDIO");
            npSeleccionado = true;
        }
        if(prioridadSecBajo.isSelected()==true){
            nivelDePrioridad= nivelPrioridad.valueOf("BAJO");
            npSeleccionado = true;
        }
        
        //Fecha
        SimpleDateFormat datef = new SimpleDateFormat("dd-MM-yyyy");
        try{
            String fechaString = fechaDesaparicionTxt.getText(); //Obtenemos la fecha del campo ingresado
            fechaDesaparicion = datef.parse(fechaString); //Convertimos la fecha
              
        }catch(ParseException e){
            JOptionPane.showMessageDialog(this, "Mal formato de fecha", "Vuelva e intente", JOptionPane.ERROR_MESSAGE);
            fechaSeleccionada=false;
        }
        
        //Todos los campos llenos?
        //Verificar que todos los campos estén llenos
        for(String campos : new String[]{cc, ultimaVezVisto, descripcion, linkFoto, codigoCaso, ubicacion}){
            if(campos.isEmpty()){
                camposSeleccionados = false;
            }
    }        
        
        try {
            //Crear si existe
            dpto.addSecuestro(codigoCaso, ubicacion, descripcion, ultimaVezVisto, linkFoto, cc, fechaDesaparicion, nivelDePrioridad, dpto);
        } catch (ECiudadanoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            secuestroAdd = false;     
        }
        
        //Agregar si se cumplen las condiciones
        if(npSeleccionado && fechaSeleccionada && camposSeleccionados && secuestroAdd){        
            DefaultTableModel model = (DefaultTableModel) tablaSecuestro.getModel();       
        //Buscar nombre del ciudadano
        int i = dpto.buscarCiudadano(cc);
              if(i!=-1){
               nombre = dpto.getCiudadanos()[i].getNombre();
           }
            model.addRow(new Object[]{nombre, cc, ultimaVezVisto, descripcion, fechaDesaparicion, nivelDePrioridad, linkFoto, codigoCaso});
            
            //Volver a vaciar los campos
            ccDesaparecidoTxt.setText("");
            ultVezVistoTxt.setText("");
            descripDesaparecidoTxt.setText("");
            fotoTxt.setText("");
            codCasoSecuestroTxt.setText("");
            fechaDesaparicionTxt.setText("");
            ubicacionSecuestroTxt.setText("");

    }else{
            if(camposSeleccionados== false){
                JOptionPane.showMessageDialog(this, "Los campos no están completos", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else if(npSeleccionado == false){
                JOptionPane.showMessageDialog(this, "No has elegido el nivel de prioridad", "ERROR", JOptionPane.ERROR_MESSAGE);      
            }
        }
        

        
    }//GEN-LAST:event_addSecuestroBotonActionPerformed

    private void descripcionHomTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descripcionHomTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descripcionHomTxtActionPerformed

    private void añadirHomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirHomBtnActionPerformed
        // TODO add your handling code here:
        String tipoHomicidio= tipoHomicidioTxt.getText();
        String ubicacion= ubicacionHomTxt.getText();
        String descripcion= descripcionHomTxt.getText();
        String armaCausante= armaHomTxt.getText();
        Date fechaHomicidio=null;
        String codCaso= codCasoHomTxt.getText();
        nivelPrioridad nivelDePrioridad= null;
        
        //Verificaciones
        boolean npSeleccionado = false;
        boolean fechaSeleccionada = true;
        boolean camposSeleccionados = true;
        
        //Verificar seleccion de datos
        if(prioridadHomAlto.isSelected()){
            nivelDePrioridad= nivelPrioridad.valueOf("ALTO");
            npSeleccionado = true;
        }
        if(prioridadHomMedio.isSelected()){
            nivelDePrioridad= nivelPrioridad.valueOf("MEDIO");
            npSeleccionado = true;

        }
        if(prioridadHomBajo.isSelected()){
            nivelDePrioridad= nivelPrioridad.valueOf("BAJO");
            npSeleccionado = true;

        }
        //Fecha
        SimpleDateFormat datef = new SimpleDateFormat("dd-MM-yyyy");
        try{
            String fechaString = fechaHomTxt.getText(); //Obtenemos la fecha del campo ingresado
            fechaHomicidio = datef.parse(fechaString); //Convertimos la fecha
            
        }catch(ParseException e){
            fechaSeleccionada = false;
            JOptionPane.showMessageDialog(this, "Mal formato de fecha", "Vuelva e intente", JOptionPane.ERROR_MESSAGE);
                    
        } 
        
        //Comprobar que todos los campos esten llenos
        for(String campos : new String[]{tipoHomicidio, ubicacion, descripcion, armaCausante, codCaso}){
            if(campos.isEmpty()){
                camposSeleccionados = false;
            }
        
    }
        //Crear si se cumple con las verificaciones
            if(npSeleccionado && fechaSeleccionada && camposSeleccionados){
            DefaultTableModel model = (DefaultTableModel) tablaHomicidio.getModel();
            model.addRow(new Object[]{tipoHomicidio, ubicacion, descripcion, armaCausante, fechaHomicidio, nivelDePrioridad, codCaso});      
            //COnstructor
            dpto.addHomicidio(codCaso, ubicacion, descripcion, tipoHomicidio, armaCausante, fechaHomicidio, nivelDePrioridad);
            
            //Volver a vaciar los campos
            tipoHomicidioTxt.setText("");
            ubicacionHomTxt.setText("");
            descripcionHomTxt.setText("");
            armaHomTxt.setText("");
            fechaHomTxt.setText("");
            buttonGroup5.clearSelection();
            }else{
                if(camposSeleccionados == false){
                    JOptionPane.showMessageDialog(this, "Los campos no están completos", "ERROR", JOptionPane.ERROR_MESSAGE);
                }else if(fechaSeleccionada == false){              
                    JOptionPane.showMessageDialog(this, "El formato de fecha no es correcto \nFormato correcto: dd-mm-yyyy", "ERROR", JOptionPane.ERROR_MESSAGE);
                }else{
                    JOptionPane.showMessageDialog(this, "No se seleccionó el nivel de Prioridad", "ERROR", JOptionPane.ERROR_MESSAGE);

                }
            }

        
    }//GEN-LAST:event_añadirHomBtnActionPerformed

    private void añadirVictimaHomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirVictimaHomBtnActionPerformed
        // TODO add your handling code here:
        String cc= ccVictimaHomTxt.getText();
        String codCaso= codCasoVictTxt.getText();
        String nombre="";
        
        //Verificaciones
        boolean camposSeleccionados = true;
        boolean victimaAdd = true;
                    
        //Revisar que estén los campos
        for(String campos : new String[]{cc, codCaso}){
            if(campos.isEmpty()){
                camposSeleccionados = false;
            }
        }
        //Se añade la victima
        try{
           //Encontramos el ciudadano con la cc
           int i = dpto.buscarCiudadano(cc);
           if(i!=-1){
             nombre = dpto.getCiudadanos()[i].getNombre();
           }
            dpto.addVictimaHomicidio(cc, codCaso, dpto);

        }catch(ECasoNoHallado | ECiudadanoNoHallado e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            victimaAdd = false;
        }
        //Añadir a la tabla si ha funcionado el constructor y cumple la verificacion
        if(victimaAdd && camposSeleccionados){
            DefaultTableModel model = (DefaultTableModel) tablaVictimaHom.getModel();
            model.addRow(new Object[]{nombre, cc, codCaso});
        }else{
            if(camposSeleccionados == false){
              JOptionPane.showMessageDialog(this, "Los campos no están completos", "ERROR", JOptionPane.ERROR_MESSAGE);                   
            }
        }
        
        
        
    }//GEN-LAST:event_añadirVictimaHomBtnActionPerformed

    private void tfCodCasoRoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCodCasoRoboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCodCasoRoboActionPerformed

    private void tfUbicacionCasoRoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfUbicacionCasoRoboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfUbicacionCasoRoboActionPerformed

    private void tfdescripCasoRoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfdescripCasoRoboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfdescripCasoRoboActionPerformed

    private void rbNivelPrior_Alto_RoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNivelPrior_Alto_RoboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbNivelPrior_Alto_RoboActionPerformed

    private void rbNivelPrior_Medio_RoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNivelPrior_Medio_RoboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbNivelPrior_Medio_RoboActionPerformed

    private void rbNivelPrior_Bajo_RoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNivelPrior_Bajo_RoboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbNivelPrior_Bajo_RoboActionPerformed

    //AÑADIR UN ROBO
    private void addBtnRoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnRoboActionPerformed
        // TODO add your handling code here:
        String codCasoRobo = tfCodCasoRobo.getText();
        String ubicacionRobo = tfUbicacionCasoRobo.getText();
        String descripRobo = tfdescripCasoRobo.getText();
        String tipoRobo = tfTipoCasoRobo.getText();
        nivelPrioridad npRobo = null;
        Date fechaRobo = null;
        
        //Verificaciones
        boolean npSeleccionado = false;
        boolean camposSeleccionados = true;
        boolean fechaSeleccionada = true;
        //Objetos Robados       
        
        //Verificar seleccion de datos NIVELPRIORIDAD
        if(rbNivelPrior_Alto_Robo.isSelected()){
            npRobo= nivelPrioridad.valueOf("ALTO");
            npSeleccionado = true;
        }
        else if(rbNivelPrior_Medio_Robo.isSelected()){
            npRobo= nivelPrioridad.valueOf("MEDIO");
            npSeleccionado = true;
        }
        else if(rbNivelPrior_Bajo_Robo.isSelected()){
            npRobo= nivelPrioridad.valueOf("BAJO");
            npSeleccionado = true;
        }

        
        //Fecha
        try{
            SimpleDateFormat datef = new SimpleDateFormat("dd-MM-yyyy");
            String fechaString = tfFechaRobo.getText(); //Obtenemos la fecha del campo ingresado
            fechaRobo = datef.parse(fechaString); //Convertimos la fecha
            }catch(ParseException e){
            JOptionPane.showMessageDialog(this, "Mal formato de fecha", "Vuelva e intente", JOptionPane.ERROR_MESSAGE);
            fechaSeleccionada = false;
        }
            //Comprobar que todos los campos esten llenos       
        for(String campos : new String[]{codCasoRobo, ubicacionRobo, tipoRobo, descripRobo}){
            if(campos.isEmpty()){
                camposSeleccionados = false;
            }
        }
        if(camposSeleccionados && npSeleccionado && fechaSeleccionada){
            DefaultTableModel model = (DefaultTableModel) TablaRobos.getModel();
            model.addRow(new Object[]{codCasoRobo, ubicacionRobo, tipoRobo, descripRobo, fechaRobo, npRobo, false});
            
            //Constructor
            dpto.addRobo(codCasoRobo, ubicacionRobo, descripRobo, tipoRobo, fechaRobo, npRobo);
            
            //Volver a vaciar los campos
            tfCodCasoRobo.setText("");
            tfUbicacionCasoRobo.setText("");
            tfFechaRobo.setText("");
            tfTipoCasoRobo.setText("");
            tfdescripCasoRobo.setText("");
            
        }else{
            if(camposSeleccionados == false){
                JOptionPane.showMessageDialog(this, "Los campos no están completos", "ERROR", JOptionPane.ERROR_MESSAGE);
            }else if(npSeleccionado == false){
                JOptionPane.showMessageDialog(this, "No se ha seleccionado el Nivel de Prioridad", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
            

        
        
    }//GEN-LAST:event_addBtnRoboActionPerformed

    private void tfTipoCasoRoboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTipoCasoRoboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTipoCasoRoboActionPerformed

    private void PolSospBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PolSospBotonActionPerformed
        // TODO add your handling code here:
        multiplePane.setSelectedIndex(6);
    }//GEN-LAST:event_PolSospBotonActionPerformed

    private void AsignarSospechosoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AsignarSospechosoBotonActionPerformed
        // TODO add your handling code here:
        String codigoCasoAsignar = tfAsigSospCodCaso.getText();
        String ccSospechosoAsignar = tfAsigSospCC.getText();
        String descripcionSospecha = tfAsigSospDescripSospecha.getText();
        String nombre = "";
        String id = "";
        String direccion = "";
        Date fechaNacimiento = null;
        String celular = "";

        
        //Verificaciones
        boolean camposSeleccionado = true;
        boolean sospechosoAdd = false;
        boolean sospechosoAsignado = true;
        
        //Crear el Sospechoso
        //Con la cedula traer los datos requeridos
        int k = dpto.buscarCiudadano(ccSospechosoAsignar);     
        if(k!=-1){
        nombre = dpto.getCiudadanos()[k].getNombre();
        id = dpto.getCiudadanos()[k].getId();
        direccion = dpto.getCiudadanos()[k].getDireccion();
        fechaNacimiento = dpto.getCiudadanos()[k].getFechaNacimiento();
        celular = dpto.getCiudadanos()[k].getCelular();
        }

        
        //Asignar el Sospechoso
        try {
            if(k!=-1){
            dpto.addSospechoso(nombre, id, direccion, fechaNacimiento, celular, descripcionSospecha);
            }
            sospechosoAdd = true;
            dpto.asignarSospechoso(ccSospechosoAsignar, dpto,codigoCasoAsignar);
        } catch (ECasoNoHallado | ECiudadanoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            sospechosoAsignado=false;
        }

        
        //Comprobar que todos los campos estén llenos
        for(String campos : new String[]{codigoCasoAsignar,ccSospechosoAsignar, descripcionSospecha}){
        if(campos.isEmpty()){
            camposSeleccionado = false;
        }
    }

        if(camposSeleccionado && sospechosoAdd && sospechosoAsignado){
            DefaultTableModel model = (DefaultTableModel) tablaSospechosos.getModel();    
            model.addRow(new Object[]{codigoCasoAsignar, ccSospechosoAsignar,nombre});            
        }else{
            if(camposSeleccionado == false){
                JOptionPane.showMessageDialog(this, "Los campos no están completos", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }

        
        
        
    }//GEN-LAST:event_AsignarSospechosoBotonActionPerformed

    private void AddVictimaRoboBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddVictimaRoboBotonActionPerformed
        // TODO add your handling code here:
        String ccVictRobo= tfCCAddVictimaRobo.getText();
        String codCasoRobo= tfCodCasoAddVictimaRobo.getText();
        String nombre="";
        
        //Verificaciones
        boolean camposSeleccionados = true;
        boolean victimaAdd = true;
                    
        //Revisar que estén los campos
        for(String campos : new String[]{ccVictRobo, codCasoRobo}){
            if(campos.isEmpty()){
                camposSeleccionados = false;
            }
        }
        //Se añade la victima
        try{
           //Encontramos el ciudadano con la cc
           int i = dpto.buscarCiudadano(ccVictRobo);
           if(i!=-1){
             nombre = dpto.getCiudadanos()[i].getNombre();
           }
            dpto.addVictimaRobo(ccVictRobo, codCasoRobo, dpto);

        }catch(ECasoNoHallado | ECiudadanoNoHallado e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            victimaAdd = false;
        }
        //Añadir a la tabla si ha funcionado el constructor y cumple la verificacion
        if(victimaAdd && camposSeleccionados){
            DefaultTableModel model = (DefaultTableModel) tablaVictimaRobo.getModel();
            model.addRow(new Object[]{ccVictRobo, nombre, codCasoRobo});
        }else{
            if(camposSeleccionados == false){
              JOptionPane.showMessageDialog(this, "Los campos no están completos", "ERROR", JOptionPane.ERROR_MESSAGE);                   
            }
        }        
        
    }//GEN-LAST:event_AddVictimaRoboBotonActionPerformed

    private void AddObjetoRobadoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddObjetoRobadoBotonActionPerformed
        // TODO add your handling code here:
        
        String codCaso = tfCodigoCasoObjetoRobado.getText();
        String objetoRobado = tfObjetoObjetoRobado.getText();
        
        //Verificacion
        boolean ORobadoAdd = true;
        
        try {
            dpto.addObjetoRobado(objetoRobado, codCaso);
        } catch (ECasoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            ORobadoAdd = false;
        }
        
        if(ORobadoAdd){
            DefaultTableModel model = (DefaultTableModel)tablaObjetosRobados.getModel();
            model.addRow(new Object[]{codCaso, objetoRobado});     
        }
        
        
    }//GEN-LAST:event_AddObjetoRobadoBotonActionPerformed

    private void EliminarObjetoRobadoBoton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarObjetoRobadoBoton1ActionPerformed
        // TODO add your handling code here:
        String codCasoAEliminar = tfCodigoCasoObjetoRobado.getText();
        String ObjetoRobadoAEliminar = tfObjetoObjetoRobado.getText();
        
        //Verificacion
        boolean elimRow = true;
        boolean cumplio = false;
        
        try {
            dpto.eliminarObjetoRobado(codCasoAEliminar, ObjetoRobadoAEliminar);
        } catch (ECasoNoHallado | EObjetoRobadoN ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            elimRow = false;
        }
        
        if(elimRow){
            DefaultTableModel model = (DefaultTableModel)tablaObjetosRobados.getModel();
            int columnIndex = model.findColumn("Objeto Robado");
            int k = model.getRowCount()-1;
            while(k>=0){
                String valorCodigo = model.getValueAt(k, columnIndex).toString();
                if(valorCodigo.equalsIgnoreCase(ObjetoRobadoAEliminar)){
                    model.removeRow(k);
                    cumplio = true;
                    break;
                }
                k--;
            }          
        }
        if(cumplio){
            tfCodigoCasoObjetoRobado.setText("");
            tfObjetoObjetoRobado.setText("");
        }
        
    }//GEN-LAST:event_EliminarObjetoRobadoBoton1ActionPerformed

    private void AsignarPoliciaBoton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AsignarPoliciaBoton1ActionPerformed
        // TODO add your handling code here:
        String codigoCasoAsignar = tfAsigPolCodigoCaso.getText();
        String ccPoliciaAsignar = tfAsigPolCC.getText();
        String nombre = "";
        Rango rank = Rango.DETECTIVE;
        
        //Verificaciones
        boolean camposSeleccionados = true;
        boolean policiaAdd = true;        
        
        //Asignar el policia
        try {
            dpto.asignarPolicia(ccPoliciaAsignar, dpto,codigoCasoAsignar);
        } catch (ECasoNoHallado | EPoliciaNoHallado  ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Reintente", JOptionPane.ERROR_MESSAGE);
            policiaAdd = false;
        }
        
        //Comprobar que estén todos los campos
        for(String campos : new String[]{codigoCasoAsignar, ccPoliciaAsignar}){
            if(campos.isEmpty()){
                camposSeleccionados=false;
            }
        }   
        //Comprobar que todos los campos esten llenos
        if(camposSeleccionados && policiaAdd){
        //Hallar datos del policia para la tabla
        int h = dpto.buscarPolicia(ccPoliciaAsignar);
            if(h!=-1){
                nombre = dpto.getPolicias()[h].getNombre();
                rank = dpto.getPolicias()[h].getRango();
            }                  
            DefaultTableModel model = (DefaultTableModel) tablaAsigPolicia.getModel();    
            model.addRow(new Object[]{codigoCasoAsignar, ccPoliciaAsignar,nombre, rank});
        }else{
            if(camposSeleccionados==false){
              JOptionPane.showMessageDialog(this, "No se ingresaron todos los campos", "Otra vez", JOptionPane.ERROR_MESSAGE);              
            }
        }
        
    }//GEN-LAST:event_AsignarPoliciaBoton1ActionPerformed

    private void eliminarCiudBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarCiudBotonActionPerformed
        // TODO add your handling code here:
        
        String cc = tfCCCiud.getText();
        
        //Verificacion
        boolean eliminado = true;
        
        try {
            dpto.eliminarCiudadano(cc);
        } catch (ECiudadanoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            eliminado = false;
        }
        
        if(eliminado){
            DefaultTableModel model = (DefaultTableModel)tablaCiudadanos.getModel();
            int columnIndex = 0;
            int k = model.getRowCount()-1;
            while(k>=0){
                String valorCodigo = model.getValueAt(k, columnIndex).toString();
                if(valorCodigo.equalsIgnoreCase(cc)){
                    model.removeRow(k);
                    tfCCCiud.setText("");
                    break;
                }
                k--;
            }
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese la cedula para eliminarla", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_eliminarCiudBotonActionPerformed

    private void eliminarPoliciaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPoliciaBotonActionPerformed
        // TODO add your handling code here:
        String cc = tfCCPol.getText();
        
        //Verificacion
        boolean eliminado = true;
        
        try {
            dpto.eliminarPolicia(cc);
        } catch (ECiudadanoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            eliminado = false;
        }
        
        if(eliminado){
            DefaultTableModel model = (DefaultTableModel)tablaPolicia.getModel();
            int columnIndex = 1;
            int k = model.getRowCount()-1;
            while(k>=0){
                String valorCodigo = model.getValueAt(k, columnIndex).toString();
                if(valorCodigo.equalsIgnoreCase(cc)){
                    model.removeRow(k);
                    tfCCPol.setText("");
                    break;
                }
                k--;
            }
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese la cedula para eliminarla", "ERROR", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_eliminarPoliciaBotonActionPerformed

    private void eliminarHomicidioBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarHomicidioBotonActionPerformed
        // TODO add your handling code here:
        String cc = codCasoHomTxt.getText();
        
        //Verificacion
        boolean eliminado = true;
        
        try {
            dpto.eliminarCaso(cc);
        } catch (ECasoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            eliminado = false;
        }
        
        if(eliminado){
            DefaultTableModel model = (DefaultTableModel)tablaHomicidio.getModel();
            int columnIndex = 6;
            int k = model.getRowCount()-1;
            while(k>=0){
                String valorCodigo = model.getValueAt(k, columnIndex).toString();
                if(valorCodigo.equalsIgnoreCase(cc)){
                    model.removeRow(k);
                    codCasoHomTxt.setText("");
                    break;
                }
                k--;
            }
            
            //En tabla victimas homicidio eliminar la row de la victima del caso a eliminar
            DefaultTableModel model2 = (DefaultTableModel)tablaVictimaHom.getModel();
            int columnIndex2 = 2;
            int j = model2.getRowCount()-1;
            while(j>=0){
                String valorCodigo2 = model2.getValueAt(j, columnIndex2).toString();
                if(valorCodigo2.equalsIgnoreCase(cc)){
                    model2.removeRow(j);
                    break;
                }
                j--;
            }
            
            //En la tabla de sospechosos asignacion
            DefaultTableModel model3 = (DefaultTableModel)tablaSospechosos.getModel();
            int columnIndex3 = 0;
            int w = model3.getRowCount()-1;
            while(w>=0){
                String valorCodigo3 = model3.getValueAt(w, columnIndex3).toString();
                if(valorCodigo3.equalsIgnoreCase(cc)){
                    model3.removeRow(w);
                    break;
                }
                w--;
            }
            //En la tabla de Policias asignacion
            DefaultTableModel model4 = (DefaultTableModel)tablaPolicia.getModel();
            int b = model4.getRowCount()-1;
            while(b>=0){
                String valorCodigo4 = model4.getValueAt(b, columnIndex3).toString();
                if(valorCodigo4.equalsIgnoreCase(cc)){
                    model4.removeRow(b);
                    break;
                }
                b--;
            }            
            
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese el código del caso a eliminar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_eliminarHomicidioBotonActionPerformed

    private void eliminarRoboBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarRoboBotonActionPerformed
        // TODO add your handling code here:
        String cc = tfCodCasoRobo.getText();
        
        //Verificacion
        boolean eliminado = true;
        
        try {
            dpto.eliminarCaso(cc);
        } catch (ECasoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            eliminado = false;
        }
        
        if(eliminado){
            DefaultTableModel model = (DefaultTableModel)TablaRobos.getModel();
            int columnIndex = 0;
            int k = model.getRowCount()-1;
            while(k>=0){
                String valorCodigo = model.getValueAt(k, columnIndex).toString();
                if(valorCodigo.equalsIgnoreCase(cc)){
                    model.removeRow(k);
                    tfCodCasoRobo.setText("");
                    break;
                }
                k--;
            }
            
            //En tabla victimas homicidio eliminar la row de la victima del caso a eliminar
            DefaultTableModel model2 = (DefaultTableModel)tablaVictimaRobo.getModel();
            int columnIndex2 = 2;
            int j = model2.getRowCount()-1;
            while(j>=0){
                String valorCodigo2 = model2.getValueAt(j, columnIndex2).toString();
                if(valorCodigo2.equalsIgnoreCase(cc)){
                    model2.removeRow(j);
                    break;
                }
                j--;
            }
            
            //En la tabla de sospechosos asignacion
            DefaultTableModel model3 = (DefaultTableModel)tablaSospechosos.getModel();
            int columnIndex3 = 0;
            int w = model3.getRowCount()-1;
            while(w>=0){
                String valorCodigo3 = model3.getValueAt(w, columnIndex3).toString();
                if(valorCodigo3.equalsIgnoreCase(cc)){
                    model3.removeRow(w);
                    break;
                }
                w--;
            }
            //En la tabla de Policias asignacion
            DefaultTableModel model4 = (DefaultTableModel)tablaPolicia.getModel();
            int b = model4.getRowCount()-1;
            while(b>=0){
                String valorCodigo4 = model4.getValueAt(b, columnIndex3).toString();
                if(valorCodigo4.equalsIgnoreCase(cc)){
                    model4.removeRow(b);
                    break;
                }
                b--;
            }
            
            //Eliminar lo que exista en la tabla objetos robados
            DefaultTableModel model5 = (DefaultTableModel)tablaObjetosRobados.getModel();
            int v = model4.getRowCount()-1;
            while(v>=0){
                String valorCodigo5 = model5.getValueAt(v, columnIndex3).toString();
                if(valorCodigo5.equalsIgnoreCase(cc)){
                    model5.removeRow(v);
                    break;
                }
                v--;
            }             
            
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese el código del caso a eliminar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }        
    }//GEN-LAST:event_eliminarRoboBotonActionPerformed

    private void eliminarAbusoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarAbusoActionPerformed
        // TODO add your handling code here:
        String cc = codCasoAbusoTxt.getText();
        
        //Verificacion
        boolean eliminado = true;
        
        try {
            dpto.eliminarCaso(cc);
        } catch (ECasoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            eliminado = false;
        }
        
        if(eliminado){
            DefaultTableModel model = (DefaultTableModel)tablaAbuso.getModel();
            int columnIndex = 0;
            int k = model.getRowCount()-1;
            while(k>=0){
                String valorCodigo = model.getValueAt(k, columnIndex).toString();
                if(valorCodigo.equalsIgnoreCase(cc)){
                    model.removeRow(k);
                    codCasoAbusoTxt.setText("");
                    break;
                }
                k--;
            }
            
            //En la tabla de sospechosos asignacion
            DefaultTableModel model3 = (DefaultTableModel)tablaSospechosos.getModel();
            int columnIndex3 = 0;
            int w = model3.getRowCount()-1;
            while(w>=0){
                String valorCodigo3 = model3.getValueAt(w, columnIndex3).toString();
                if(valorCodigo3.equalsIgnoreCase(cc)){
                    model3.removeRow(w);
                    break;
                }
                w--;
            }
            //En la tabla de Policias asignacion
            DefaultTableModel model4 = (DefaultTableModel)tablaPolicia.getModel();
            int b = model4.getRowCount()-1;
            while(b>=0){
                String valorCodigo4 = model4.getValueAt(b, columnIndex3).toString();
                if(valorCodigo4.equalsIgnoreCase(cc)){
                    model4.removeRow(b);
                    break;
                }
                b--;
            }            
            
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese el código del caso a eliminar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_eliminarAbusoActionPerformed

    private void eliminarSecuestroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarSecuestroActionPerformed
        // TODO add your handling code here:
        String cc = codCasoSecuestroTxt.getText();
        
        //Verificacion
        boolean eliminado = true;
        
        try {
            dpto.eliminarCaso(cc);
        } catch (ECasoNoHallado ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            eliminado = false;
        }
        
        if(eliminado){
            DefaultTableModel model = (DefaultTableModel)tablaSecuestro.getModel();
            int columnIndex = 7;
            int k = model.getRowCount()-1;
            while(k>=0){
                String valorCodigo = model.getValueAt(k, columnIndex).toString();
                if(valorCodigo.equalsIgnoreCase(cc)){
                    model.removeRow(k);
                    codCasoAbusoTxt.setText("");
                    break;
                }
                k--;
            }
            
            //En la tabla de sospechosos asignacion
            DefaultTableModel model3 = (DefaultTableModel)tablaSospechosos.getModel();
            int columnIndex3 = 0;
            int w = model3.getRowCount()-1;
            while(w>=0){
                String valorCodigo3 = model3.getValueAt(w, columnIndex3).toString();
                if(valorCodigo3.equalsIgnoreCase(cc)){
                    model3.removeRow(w);
                    break;
                }
                w--;
            }
            //En la tabla de Policias asignacion
            DefaultTableModel model4 = (DefaultTableModel)tablaPolicia.getModel();
            int b = model4.getRowCount()-1;
            while(b>=0){
                String valorCodigo4 = model4.getValueAt(b, columnIndex3).toString();
                if(valorCodigo4.equalsIgnoreCase(cc)){
                    model4.removeRow(b);
                    break;
                }
                b--;
            }            
            
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese el código del caso a eliminar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_eliminarSecuestroActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //Obetener modelos de tablas
        DefaultTableModel ciudadanosModel= (DefaultTableModel) tablaCiudadanos.getModel();
        Vector<Vector> datosCiudadanos= ciudadanosModel.getDataVector();
        DefaultTableModel policiasModel= (DefaultTableModel) tablaPolicia.getModel();
        Vector<Vector> datosPolicias= policiasModel.getDataVector();
        DefaultTableModel homicidioModel= (DefaultTableModel) tablaHomicidio.getModel();
        Vector<Vector> datosHomicidios= homicidioModel.getDataVector();
        DefaultTableModel victimaHomModel= (DefaultTableModel) tablaVictimaHom.getModel();
        Vector<Vector> datosVictimasHom= victimaHomModel.getDataVector();
        DefaultTableModel abusoSexualModel= (DefaultTableModel) tablaAbuso.getModel();
        Vector<Vector> datosAbuso= abusoSexualModel.getDataVector();
        DefaultTableModel secuestroModel= (DefaultTableModel) tablaSecuestro.getModel();
        Vector<Vector> datosSecuestros= secuestroModel.getDataVector();
        DefaultTableModel roboModel= (DefaultTableModel) TablaRobos.getModel();
        Vector<Vector> datosRobos= roboModel.getDataVector();
        DefaultTableModel victimasRoboModel= (DefaultTableModel) tablaVictimaRobo.getModel();
        Vector<Vector> datosVictimasRob= victimasRoboModel.getDataVector();
        DefaultTableModel sospechosoModel= (DefaultTableModel) tablaSospechosos.getModel();
        Vector<Vector> datosSospechosos= sospechosoModel.getDataVector();
        DefaultTableModel policiaAsignadoModel= (DefaultTableModel) tablaAsigPolicia.getModel();
        Vector<Vector> datosPolAsignados= policiaAsignadoModel.getDataVector();
        DefaultTableModel objetoRobadoModel= (DefaultTableModel) tablaObjetosRobados.getModel();
        Vector<Vector> datosObRobados= objetoRobadoModel.getDataVector();
        
        //Escribir la clase del departamento de policia
        try{
            FileOutputStream dptoFile = new FileOutputStream("dptoPol.txt");
            ObjectOutputStream oos= new ObjectOutputStream(dptoFile);
            oos.writeObject(dpto);
            
            oos.close();
            dptoFile.close();
        }catch(Exception e) {
			e.getMessage();
		}
        
        
//Escribir todas tablas en el fichero
        try{
            FileOutputStream Tablafile = new FileOutputStream("tablas.txt");
            ObjectOutputStream oos1= new ObjectOutputStream(Tablafile);  
            
            oos1.writeObject(datosCiudadanos);
            oos1.writeObject(datosPolicias);
            oos1.writeObject(datosHomicidios);
            oos1.writeObject(datosVictimasHom);
            oos1.writeObject(datosAbuso);
            oos1.writeObject(datosSecuestros);
            oos1.writeObject(datosRobos);
            oos1.writeObject(datosVictimasRob);
            oos1.writeObject(datosSospechosos);
            oos1.writeObject(datosPolAsignados);
            oos1.writeObject(datosObRobados);
         
            
            
            oos1.close();
            Tablafile.close();
        } catch(Exception e) {
			e.getMessage();
		}
    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //Leer la clase policia
        try{
   
            FileInputStream dptoFile= new FileInputStream("dptoPol.txt");
            ObjectInputStream ois= new ObjectInputStream(dptoFile);
            
            
            dptoIn= (DptoPolicia)ois.readObject();
            
            //Reemplazar el input de policia en la clase original
            dpto.setCiudadanos(dptoIn.getCiudadanos());
            dpto.setCasos(dptoIn.getCasos());
            dpto.setPolicias(dptoIn.getPolicias());
            dpto.setSospechosos(dptoIn.getSospechosos());
            
            ois.close();
            dptoFile.close();
            
        } catch(Exception e){
                    e.getMessage();
                    }
        
        //Leer las tablas
        try{
            
            FileInputStream tablaFile= new FileInputStream("tablas.txt");
            ObjectInputStream ois1= new ObjectInputStream(tablaFile);
            
            //Leer datos de las tablas
            Vector<Vector> datosCiudadanos= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosPolicias= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosHomicidios= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosVictimasHom= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosAbuso= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosSecuestros= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosRobos= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosVictimasRob= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosSospechosos= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosPolAsignados= (Vector<Vector>)ois1.readObject();
            Vector<Vector> datosObRobados= (Vector<Vector>)ois1.readObject();
            
            
            
            
            ois1.close();
            tablaFile.close();
            
            //Anadir datos a tablas
            DefaultTableModel ciudadanosModel= (DefaultTableModel) tablaCiudadanos.getModel();
            for(int i=0; i<datosCiudadanos.size(); i++){
                Vector row= datosCiudadanos.get(i);
                ciudadanosModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2), row.get(3), row.get(4)});
            }
            DefaultTableModel policiasModel= (DefaultTableModel) tablaPolicia.getModel();
            for(int i=0; i<datosPolicias.size(); i++){
                Vector row= datosPolicias.get(i);
                policiasModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2), row.get(3), row.get(4), row.get(5)});
            }
            DefaultTableModel homicidiosModel= (DefaultTableModel) tablaHomicidio.getModel();
            for(int i=0; i<datosHomicidios.size(); i++){
                Vector row= datosHomicidios.get(i);
                homicidiosModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2), row.get(3), row.get(4), row.get(5), row.get(6)});
            }
            DefaultTableModel victimasHomModel= (DefaultTableModel) tablaVictimaHom.getModel();
            for(int i=0; i<datosVictimasHom.size(); i++){
                Vector row= datosVictimasHom.get(i);
                victimasHomModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2)});
            }
            DefaultTableModel abusoSexualModel= (DefaultTableModel) tablaAbuso.getModel();
            for(int i=0; i<datosAbuso.size(); i++){
                Vector row= datosAbuso.get(i);
                abusoSexualModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2),row.get(3),row.get(4),row.get(5),row.get(6),row.get(7),row.get(8)});
            }
            DefaultTableModel secuestroModel= (DefaultTableModel) tablaSecuestro.getModel();
            for(int i=0; i<datosSecuestros.size(); i++){
                Vector row= datosSecuestros.get(i);
                secuestroModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2),row.get(3),row.get(4),row.get(5),row.get(6),row.get(7)});
            }
            DefaultTableModel roboModel= (DefaultTableModel) TablaRobos.getModel();
            for(int i=0; i<datosRobos.size(); i++){
                Vector row= datosRobos.get(i);
                roboModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2),row.get(3),row.get(4),row.get(5),row.get(6)});
            }
            DefaultTableModel victimasRoboModel= (DefaultTableModel) tablaVictimaRobo.getModel();
            for(int i=0; i<datosVictimasRob.size(); i++){
                Vector row= datosVictimasRob.get(i);
                victimasRoboModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2)});
            }
            DefaultTableModel sospechosoModel= (DefaultTableModel) tablaSospechosos.getModel();
            for(int i=0; i<datosSospechosos.size(); i++){
                Vector row= datosSospechosos.get(i);
                sospechosoModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2)});
            }
            DefaultTableModel policiaAsignadoModel= (DefaultTableModel) tablaAsigPolicia.getModel();
            for(int i=0; i<datosPolAsignados.size(); i++){
                Vector row= datosPolAsignados.get(i);
                policiaAsignadoModel.addRow(new Object[]{row.get(0), row.get(1), row.get(2),row.get(3)});
            }
            DefaultTableModel objetoRobadoModel= (DefaultTableModel) tablaObjetosRobados.getModel();
            for(int i=0; i<datosObRobados.size(); i++){
                Vector row= datosObRobados.get(i);
                objetoRobadoModel.addRow(new Object[]{row.get(0), row.get(1)});
            }
            
        }catch(Exception e){
                    e.getMessage();
                    }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddObjetoRobadoBoton;
    private javax.swing.JButton AddVictimaRoboBoton;
    private javax.swing.JButton AsignarPoliciaBoton1;
    private javax.swing.JButton AsignarSospechosoBoton;
    private javax.swing.JButton EliminarObjetoRobadoBoton1;
    private javax.swing.JButton PolSospBoton;
    private javax.swing.JTable TablaRobos;
    private javax.swing.JButton abusoSexualBoton;
    private javax.swing.JRadioButton acosoAlto;
    private javax.swing.JRadioButton acosoLeve;
    private javax.swing.JRadioButton acosoModerado;
    private javax.swing.JButton addBtnRobo;
    private javax.swing.JButton addCiudBoton;
    private javax.swing.JButton addPolBoton;
    private javax.swing.JButton addSecuestroBoton;
    private javax.swing.JTextField armaHomTxt;
    private javax.swing.JButton añadirCasoAbusoBtn;
    private javax.swing.JButton añadirHomBtn;
    private javax.swing.JButton añadirVictimaHomBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.JRadioButton capitanR;
    private javax.swing.JTextField ccDesaparecidoTxt;
    private javax.swing.JTextField ccVictimaAbusoTxt;
    private javax.swing.JTextField ccVictimaHomTxt;
    private javax.swing.JButton ciudadanosBoton;
    private javax.swing.JTextField codCasoAbusoTxt;
    private javax.swing.JTextField codCasoHomTxt;
    private javax.swing.JTextField codCasoSecuestroTxt;
    private javax.swing.JTextField codCasoVictTxt;
    private javax.swing.JRadioButton coronelR;
    private javax.swing.JTextField descripDesaparecidoTxt;
    private javax.swing.JTextField descripcionAbusoTxt;
    private javax.swing.JTextField descripcionHomTxt;
    private javax.swing.JRadioButton detectiveR;
    private javax.swing.JButton eliminarAbuso;
    private javax.swing.JButton eliminarCiudBoton;
    private javax.swing.JButton eliminarHomicidioBoton;
    private javax.swing.JButton eliminarPoliciaBoton;
    private javax.swing.JButton eliminarRoboBoton;
    private javax.swing.JButton eliminarSecuestro;
    private javax.swing.JTextField fechaAbusoTxt;
    private javax.swing.JTextField fechaDesaparicionTxt;
    private javax.swing.JTextField fechaHomTxt;
    private javax.swing.JTextField fotoTxt;
    private javax.swing.JRadioButton generalR;
    private javax.swing.JButton homicidiosBoton;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton mayorR;
    private javax.swing.JRadioButton menorFalso;
    private javax.swing.JRadioButton menorVerdadero;
    private javax.swing.JTabbedPane multiplePane;
    private javax.swing.JPanel panelAbusoSexual;
    private javax.swing.JPanel panelCiudadanos;
    private javax.swing.JPanel panelHomicidios;
    private javax.swing.JPanel panelRobos;
    private javax.swing.JPanel panelSecuestros;
    private javax.swing.JRadioButton patrulleroR;
    private javax.swing.JButton policiasBoton;
    private javax.swing.JRadioButton prioridadAlto;
    private javax.swing.JRadioButton prioridadBajo;
    private javax.swing.JRadioButton prioridadHomAlto;
    private javax.swing.JRadioButton prioridadHomBajo;
    private javax.swing.JRadioButton prioridadHomMedio;
    private javax.swing.JRadioButton prioridadMedio;
    private javax.swing.JRadioButton prioridadSecAlto;
    private javax.swing.JRadioButton prioridadSecBajo;
    private javax.swing.JRadioButton prioridadSecMedio;
    private javax.swing.JRadioButton rbNivelPrior_Alto_Robo;
    private javax.swing.JRadioButton rbNivelPrior_Bajo_Robo;
    private javax.swing.JRadioButton rbNivelPrior_Medio_Robo;
    private javax.swing.JButton robosBoton;
    private javax.swing.JButton secuestroBoton;
    private javax.swing.JTable tablaAbuso;
    private javax.swing.JTable tablaAsigPolicia;
    private javax.swing.JTable tablaCiudadanos;
    private javax.swing.JTable tablaHomicidio;
    private javax.swing.JTable tablaObjetosRobados;
    private javax.swing.JTable tablaPolicia;
    private javax.swing.JTable tablaSecuestro;
    private javax.swing.JTable tablaSospechosos;
    private javax.swing.JTable tablaVictimaHom;
    private javax.swing.JTable tablaVictimaRobo;
    private javax.swing.JRadioButton tenienteCoronelR;
    private javax.swing.JRadioButton tenienteR;
    private javax.swing.JTextField tfAsigPolCC;
    private javax.swing.JTextField tfAsigPolCodigoCaso;
    private javax.swing.JTextField tfAsigSospCC;
    private javax.swing.JTextField tfAsigSospCodCaso;
    private javax.swing.JTextField tfAsigSospDescripSospecha;
    private javax.swing.JTextField tfCCAddVictimaRobo;
    private javax.swing.JTextField tfCCCiud;
    private javax.swing.JTextField tfCCPol;
    private javax.swing.JTextField tfCelularCiud;
    private javax.swing.JTextField tfCodCasoAddVictimaRobo;
    private javax.swing.JTextField tfCodCasoRobo;
    private javax.swing.JTextField tfCodigoCasoObjetoRobado;
    private javax.swing.JTextField tfDireccionCiud;
    private javax.swing.JTextField tfFechaNaciCiud;
    private javax.swing.JTextField tfFechaRobo;
    private javax.swing.JTextField tfNombreCiud;
    private javax.swing.JTextField tfObjetoObjetoRobado;
    private javax.swing.JTextField tfSedePol;
    private javax.swing.JTextField tfTipoCasoRobo;
    private javax.swing.JTextField tfUbicacionCasoRobo;
    private javax.swing.JTextField tfdescripCasoRobo;
    private javax.swing.JTextField tfplacaPol;
    private javax.swing.JTextField tipoHomicidioTxt;
    private javax.swing.JTextField ubicacionAbusoTxt;
    private javax.swing.JTextField ubicacionHomTxt;
    private javax.swing.JTextField ubicacionSecuestroTxt;
    private javax.swing.JTextField ultVezVistoTxt;
    // End of variables declaration//GEN-END:variables
}
